# OASIS_START
# DO NOT EDIT (digest: 01ec1070db7cf6e2075b573621bf875d)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library gapi-ocaml
"src/gapi/gapi-ocaml.cmxs": use_gapi-ocaml
<src/gapi/*.ml{,i}>: pkg_xmlm
<src/gapi/*.ml{,i}>: pkg_batteries
<src/gapi/*.ml{,i}>: pkg_netstring
<src/gapi/*.ml{,i}>: pkg_curl
<src/gapi/*.ml{,i}>: pkg_str
<src/gapi/*.ml{,i}>: pkg_cryptokit
<src/gapi/*.ml{,i}>: pkg_json-wheel
# Library gdata
"src/gdata/gdata.cmxs": use_gdata
<src/gdata/*.ml{,i}>: use_gapi-ocaml
<src/gdata/*.ml{,i}>: pkg_xmlm
<src/gdata/*.ml{,i}>: pkg_batteries
<src/gdata/*.ml{,i}>: pkg_netstring
<src/gdata/*.ml{,i}>: pkg_curl
<src/gdata/*.ml{,i}>: pkg_str
<src/gdata/*.ml{,i}>: pkg_cryptokit
<src/gdata/*.ml{,i}>: pkg_json-wheel
# Executable serviceGenerator
"tools/serviceGenerator.byte": use_gapi-ocaml
"tools/serviceGenerator.byte": pkg_xmlm
"tools/serviceGenerator.byte": pkg_batteries
"tools/serviceGenerator.byte": pkg_netstring
"tools/serviceGenerator.byte": pkg_curl
"tools/serviceGenerator.byte": pkg_str
"tools/serviceGenerator.byte": pkg_cryptokit
"tools/serviceGenerator.byte": pkg_json-wheel
<tools/*.ml{,i}>: use_gapi-ocaml
<tools/*.ml{,i}>: pkg_xmlm
<tools/*.ml{,i}>: pkg_batteries
<tools/*.ml{,i}>: pkg_netstring
<tools/*.ml{,i}>: pkg_curl
<tools/*.ml{,i}>: pkg_str
<tools/*.ml{,i}>: pkg_cryptokit
<tools/*.ml{,i}>: pkg_json-wheel
# Executable oauth2Flow
"examples/auth/oauth2Flow.byte": use_gdata
"examples/auth/oauth2Flow.byte": use_gapi-ocaml
"examples/auth/oauth2Flow.byte": pkg_nethttpd
"examples/auth/oauth2Flow.byte": pkg_xmlm
"examples/auth/oauth2Flow.byte": pkg_batteries
"examples/auth/oauth2Flow.byte": pkg_netstring
"examples/auth/oauth2Flow.byte": pkg_curl
"examples/auth/oauth2Flow.byte": pkg_str
"examples/auth/oauth2Flow.byte": pkg_cryptokit
"examples/auth/oauth2Flow.byte": pkg_json-wheel
<examples/auth/*.ml{,i}>: use_gdata
# Executable oauth1Flow
"examples/auth/oauth1Flow.byte": use_gapi-ocaml
"examples/auth/oauth1Flow.byte": pkg_nethttpd
"examples/auth/oauth1Flow.byte": pkg_xmlm
"examples/auth/oauth1Flow.byte": pkg_batteries
"examples/auth/oauth1Flow.byte": pkg_netstring
"examples/auth/oauth1Flow.byte": pkg_curl
"examples/auth/oauth1Flow.byte": pkg_str
"examples/auth/oauth1Flow.byte": pkg_cryptokit
"examples/auth/oauth1Flow.byte": pkg_json-wheel
# Executable clientLoginFlow
"examples/auth/clientLoginFlow.byte": use_gapi-ocaml
"examples/auth/clientLoginFlow.byte": pkg_nethttpd
"examples/auth/clientLoginFlow.byte": pkg_xmlm
"examples/auth/clientLoginFlow.byte": pkg_batteries
"examples/auth/clientLoginFlow.byte": pkg_netstring
"examples/auth/clientLoginFlow.byte": pkg_curl
"examples/auth/clientLoginFlow.byte": pkg_str
"examples/auth/clientLoginFlow.byte": pkg_cryptokit
"examples/auth/clientLoginFlow.byte": pkg_json-wheel
<examples/auth/*.ml{,i}>: use_gapi-ocaml
<examples/auth/*.ml{,i}>: pkg_nethttpd
<examples/auth/*.ml{,i}>: pkg_xmlm
<examples/auth/*.ml{,i}>: pkg_batteries
<examples/auth/*.ml{,i}>: pkg_netstring
<examples/auth/*.ml{,i}>: pkg_curl
<examples/auth/*.ml{,i}>: pkg_str
<examples/auth/*.ml{,i}>: pkg_cryptokit
<examples/auth/*.ml{,i}>: pkg_json-wheel
# Executable refreshOAuth2Token
"src/test/refreshOAuth2Token.byte": use_gapi-ocaml
"src/test/refreshOAuth2Token.byte": pkg_oUnit
"src/test/refreshOAuth2Token.byte": pkg_xmlm
"src/test/refreshOAuth2Token.byte": pkg_batteries
"src/test/refreshOAuth2Token.byte": pkg_netstring
"src/test/refreshOAuth2Token.byte": pkg_curl
"src/test/refreshOAuth2Token.byte": pkg_str
"src/test/refreshOAuth2Token.byte": pkg_cryptokit
"src/test/refreshOAuth2Token.byte": pkg_json-wheel
# Executable test_suite
"src/test/testSuite.byte": use_gdata
"src/test/testSuite.byte": use_gapi-ocaml
"src/test/testSuite.byte": pkg_oUnit
"src/test/testSuite.byte": pkg_xmlm
"src/test/testSuite.byte": pkg_batteries
"src/test/testSuite.byte": pkg_netstring
"src/test/testSuite.byte": pkg_curl
"src/test/testSuite.byte": pkg_str
"src/test/testSuite.byte": pkg_cryptokit
"src/test/testSuite.byte": pkg_json-wheel
<src/test/*.ml{,i}>: use_gdata
<src/test/*.ml{,i}>: use_gapi-ocaml
<src/test/*.ml{,i}>: pkg_oUnit
<src/test/*.ml{,i}>: pkg_xmlm
<src/test/*.ml{,i}>: pkg_batteries
<src/test/*.ml{,i}>: pkg_netstring
<src/test/*.ml{,i}>: pkg_curl
<src/test/*.ml{,i}>: pkg_str
<src/test/*.ml{,i}>: pkg_cryptokit
<src/test/*.ml{,i}>: pkg_json-wheel
# OASIS_STOP
